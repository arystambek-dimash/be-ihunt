name: Build and deploy Node.js app to Azure Web App - ihunt

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/ihunt:${{ github.sha }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/ihunt:${{ github.sha }}

      - name: Set environment variables
        run: |
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "MONGO_DB_URI=${{ secrets.MONGO_DB_URI }}" >> $GITHUB_ENV
          echo "MONGO_DATABASE=${{ secrets.MONGO_DATABASE }}" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
          echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "HH_CLIENT_ID=${{ secrets.HH_CLIENT_ID }}" >> $GITHUB_ENV
          echo "HH_CLIENT_SECRET=${{ secrets.HH_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "LINKEDIN_CLIENT_ID=${{ secrets.LINKEDIN_CLIENT_ID }}" >> $GITHUB_ENV
          echo "LINKEDIN_CLIENT_SECRET=${{ secrets.LINKEDIN_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "JOOBLE_REST_API=${{ secrets.JOOBLE_REST_API }}" >> $GITHUB_ENV
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "GEMINI_AI_API_KEY=${{ secrets.GEMINI_AI_API_KEY }}" >> $GITHUB_ENV
          echo "GOOGLE_MAIL_APP_EMAIL=${{ secrets.GOOGLE_MAIL_APP_EMAIL }}" >> $GITHUB_ENV
          echo "GOOGLE_MAIL_APP_PASSWORD=${{ secrets.GOOGLE_MAIL_APP_PASSWORD }}" >> $GITHUB_ENV
          echo "CLIENT_SIDE_URL=${{ secrets.CLIENT_SIDE_URL }}" >> $GITHUB_ENV
          echo "SERVER_SIDE_URL=${{ secrets.SERVER_SIDE_URL }}" >> $GITHUB_ENV
          echo "SERVER_SIDE_URL=${{ secrets.CORS_ORIGINS }}" >> $GITHUB_ENV

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App for Containers
        run: |
          az webapp config container set --resource-group iamhunt --name ihunt --docker-custom-image-name ${{ secrets.ACR_LOGIN_SERVER }}/ihunt:${{ github.sha }} --docker-registry-server-url https://${{ secrets.ACR_LOGIN_SERVER }} --docker-registry-server-user ${{ secrets.ACR_USERNAME }} --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}

      - name: Configure App Settings on Azure Web App
        run: |
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings WEBSITES_PORT=${{ secrets.PORT }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings MONGO_DB_URI=${{ secrets.MONGO_DB_URI }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings MONGO_DATABASE=${{ secrets.MONGO_DATABASE }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings AWS_REGION=${{ secrets.AWS_REGION }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings HH_CLIENT_ID=${{ secrets.HH_CLIENT_ID }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings HH_CLIENT_SECRET=${{ secrets.HH_CLIENT_SECRET }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings LINKEDIN_CLIENT_ID=${{ secrets.LINKEDIN_CLIENT_ID }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings LINKEDIN_CLIENT_SECRET=${{ secrets.LINKEDIN_CLIENT_SECRET }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings JOOBLE_REST_API=${{ secrets.JOOBLE_REST_API }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings GEMINI_AI_API_KEY=${{ secrets.GEMINI_AI_API_KEY }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings GOOGLE_MAIL_APP_EMAIL=${{ secrets.GOOGLE_MAIL_APP_EMAIL }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings GOOGLE_MAIL_APP_PASSWORD=${{ secrets.GOOGLE_MAIL_APP_PASSWORD }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings CLIENT_SIDE_URL=${{ secrets.CLIENT_SIDE_URL }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings SERVER_SIDE_URL=${{ secrets.SERVER_SIDE_URL }}
          az webapp config appsettings set --resource-group iamhunt --name ihunt --settings SERVER_SIDE_URL=${{ secrets.CORS_ORIGINS }}

      - name: Restart Azure Web App
        run: az webapp restart --resource-group iamhunt --name ihunt
